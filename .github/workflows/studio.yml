
name: studio-nuxt-build
run-name: studio nuxt build

on:
  # Runs on pushes targeting the default branch
  push:
    branches:
      - 'main'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Add write workflow permissions
permissions:
  contents: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  # Build job
  build-and-deploy:
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        working-directory: .

    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [18]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      ## disabled since we use bun
      #- name: Identify package manager
      #  id: pkgman
      #  run: |
      #    cache=`[ -f "./pnpm-lock.yaml" ] && echo "pnpm" || ([ -f "./package-lock.json" ] && echo "npm" || ([ -f "./yarn.lock" ] && echo "yarn" || echo ""))`
      #    package_manager=`[ ! -z "$cache" ] && echo "$cache" || echo "pnpm"`
      #    echo "cache=$cache" >> $GITHUB_OUTPUT
      #    echo "package_manager=$package_manager" >> $GITHUB_OUTPUT

      ## disabled since we use bun
      #- uses: pnpm/action-setup@v2.4.0
      #  if: ${{ steps.pkgman.outputs.package_manager == 'pnpm' }}
      #  name: Install pnpm
      #  id: pnpm-install
      #  with:
      #    version: 8

      - uses: actions/setup-node@v3
        with:
          version: ${{ matrix.node }}
          cache: ${{ steps.pkgman.outputs.cache }}

      ## disabled since we force/use bun
      #- name: Install dependencies
      #  run: ${{ steps.pkgman.outputs.package_manager }} install
      - name: Install dependencies (bun)
        run: npx bun install
        env:
          # token to access our paxpar-widgets private repo
          ARUNDO_NPM_REGISTRY_TOKEN: L3uMYmuJLMbJQxKxnfyE

      ## disabled since we force/use bun
      #- name: Install @nuxthq/studio
      #  run: ${{ steps.pkgman.outputs.package_manager }} add -D @nuxthq/studio
      - name: Install @nuxthq/studio
        run: npx bun add -D @nuxthq/studio

      - name: Create .nuxtrc
        run: echo '\nautoImport=true\nmodules[]=@nuxthq/studio' >> .nuxtrc

      - name: Generate
        run: npx nuxi generate
        env:
          PAXPAR_URL: https://paxpar.tech
          PAXPAR_KEY: IsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFz2253549e9a16beaaa0c314d2bAsImV4cCI6MjAxMTI4Nz
          NUXT_PUBLIC_BACKEND_FORCED: https://dev.paxpar.tech
          NUXT_PUBLIC_STUDIO_API_URL: https://api.nuxt.studio
          NUXT_PUBLIC_STUDIO_TOKENS: 884f815ffe3dfeb8893734d5fac0bec37a441165cd315abe05b3c85866939644
          SUPABASE_URL: https://eiazjrfkvoeghuivvfau.supabase.co
          SUPABASE_KEY: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImVpYXpqcmZrdm9lZ2h1aXZ2ZmF1Iiwicm9sZSI6ImFub24iLCJpYXQiOjE2OTU3MTE0MDAsImV4cCI6MjAxMTI4NzQwMH0.9R-_c-KpmtKBE_Oaeb4YvYBh3EGTKc3-uzwku495SGE

      - name: Add .nojekyll file
        run: touch .output/public/.nojekyll

        # Deployment job
      - name: Deploy ðŸš€
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: ./.output/public



